{-# LANGUAGE OverloadedStrings #-}
module JsonSpec where

import Test.Hspec

import Data.Aeson

import Database.Postgis.JSON
import Database.Postgis.Geometry

import Debug.Trace

geoJSON = "{\"coordinates\":[[-118.00461121305374,35.973406736404876],[-118.0045751708701,35.97317522823921],[-118.00461121305374,35.97298345029462],[-118.00487406953725,35.97271866597335],[-118.00522962986987,35.972503837795045],[-118.00539710029528,35.972493444235106],[-118.00546407170165,35.97238297075127],[-118.00562383077613,35.972309964374624],[-118.00610302418056,35.972176440657066],[-118.00622933946137,35.97226403154525],[-118.0064612667222,35.97227869987581],[-118.00660803384676,35.97234743148182],[-118.00675756699938,35.97230786889884],[-118.00696107960844,35.97204509623436],[-118.00718521169928,35.97199715174819],[-118.00751378230369,35.97209932714785],[-118.00768636569002,35.972180631608666],[-118.00812440394986,35.97231616698299],[-118.00824292406075,35.97228699795993],[-118.00849287241338,35.972251542509525],[-118.00905714213502,35.972161856145576],[-118.00920390925958,35.972090945244695],[-118.00945645600221,35.97203889362601],[-118.00968327030206,35.971974185333515],[-118.0100286047128,35.97147127114309],[-118.01045507594631,35.97116575077243],[-118.01076285943083,35.97067364923709],[-118.01077744394233,35.97054456792822],[-118.01072321302881,35.970396459699145],[-118.01054694160509,35.970127652064356],[-118.01022163994291,35.9697323615107],[-118.0100589472023,35.969622642398186],[-118.00994411512882,35.96953798517613]],\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"ESPG:4326\"}},\"type\":\"LineString\"}"

spec = do
  describe "parse json" $ do
    it "should correctly decode" $ do
      let v = case eitherDecode geoJSON of
                Right (GeoLineString srid geo) ->  srid
                Left _ -> Nothing
      v `shouldBe` (Just 4326)
